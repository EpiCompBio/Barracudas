}
}
using("FactoMineR")
################################################################################
# WORKING DIRECTORY AND SOURCING FUNCTIONS
################################################################################
file_path<-dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(file_path)
source("C:/Users/JOE/Documents/R_utility_and_self_implementations/FAMD_plots_utility.R")
source("C:/Users/JOE/Documents/R_utility_and_self_implementations/colors_themes_utility.R")
################################################################################
# LOADING DATA
################################################################################
example_mixed_data_clustering_1=readRDS("../../open_data/example_mixed_data_clustering_1.rds")
for (k in 1:3) {
example_mixed_data_clustering_1[,k]=as.numeric(as.character(example_mixed_data_clustering_1[,k]))
}
for (k in 4:ncol(example_mixed_data_clustering_1)) {
example_mixed_data_clustering_1[,k]=as.factor(example_mixed_data_clustering_1[,k])
}
print(class(example_mixed_data_clustering_1[,1]))
print(class(example_mixed_data_clustering_1[,4]))
FAMD_res_example_mixed_data_clustering_1=FAMD(example_mixed_data_clustering_1, ncp = ncol(example_mixed_data_clustering_1), graph = FALSE)
FAMD_res_example_mixed_data_clustering_1$eig
kmeans(FAMD_res_example_mixed_data_clustering_1)
kmeans(FAMD_res_example_mixed_data_clustering_1,centers=3)
kmeans(FAMD_res_example_mixed_data_clustering_1$ind$coord,centers=3)
test=(FAMD_res_example_mixed_data_clustering_1$ind$coord,centers=3)
test=kmeans(FAMD_res_example_mixed_data_clustering_1$ind$coord,centers=3)
table(c(rep(1,1000),rep(2,1000),rep(3,1000)),test$cluster)
test=kmeans(FAMD_res_example_mixed_data_clustering_1$ind$coord[,1:3],centers=3)
table(c(rep(1,1000),rep(2,1000),rep(3,1000)),test$cluster)
FAMD_res_example_mixed_data_clustering_1$eig
test=kmeans(FAMD_res_example_mixed_data_clustering_1$ind$coord[,1:5],centers=3)
table(c(rep(1,1000),rep(2,1000),rep(3,1000)),test$cluster)
test=kmeans(FAMD_res_example_mixed_data_clustering_1$ind$coord[,1:6],centers=3)
table(c(rep(1,1000),rep(2,1000),rep(3,1000)),test$cluster)
test=kmeans(FAMD_res_example_mixed_data_clustering_1$ind$coord[,1:7],centers=3)
table(c(rep(1,1000),rep(2,1000),rep(3,1000)),test$cluster)
kmeans_FAMD_res_example_mixed_data_clustering_1=kmeans(FAMD_res_example_mixed_data_clustering_1$ind$coord[,1:7],centers=3)
clusters_kmeans_FAMD=kmeans_FAMD_res_example_mixed_data_clustering_1
clusters_kmeans_FAMD
table(c(rep(1,1000),rep(2,1000),rep(3,1000)),clusters_kmeans_FAMD)
kmeans_FAMD_res_example_mixed_data_clustering_1=kmeans(FAMD_res_example_mixed_data_clustering_1$ind$coord[,1:7],centers=3)
clusters_kmeans_FAMD=kmeans_FAMD_res_example_mixed_data_clustering_1$cluster
table(c(rep(1,1000),rep(2,1000),rep(3,1000)),clusters_kmeans_FAMD)
FAMD=1
?FAMD
FAMD=kmeans_FAMD_res_example_mixed_data_clustering_1
classes=clusters_kmeans_FAMD
dims=c(1,2)
custom_theme=NULL
color_scale=NULL
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=classes)
FAMD=kmeans_FAMD_res_example_mixed_data_clustering_1$ind$coord
classes=clusters_kmeans_FAMD
dims=c(1,2)
custom_theme=NULL
color_scale=NULL
FAMD
FAMD=FAMD_res_example_mixed_data_clustering_1
classes=clusters_kmeans_FAMD
dims=c(1,2)
custom_theme=NULL
color_scale=NULL
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=classes)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=classes)
if (is.null(color_scale)) {
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),colors="clusters"),color="#0a9cd4") +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2],colors="clusters"),label="names"),color="#0a9cd4")
} else {
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2])),color=color_scale[1]) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),label="names"),color=color_scale[1])
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=classes)
if (is.null(color_scale)) {
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2],color="clusters"),label="names"))
} else {
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),label="names",color="clusters"))
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot_data)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=classes)
if (is.null(color_scale)) {
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters"),label="names")
} else {
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),label="names",color="clusters"))
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=classes)
head( FAMD_ind_plot_data)
if (is.null(color_scale)) {
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters"),label="names")
} else {
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),label="names",color="clusters"))
}
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
if (is.null(color_scale)) {
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"))
} else {
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),label="names",color="clusters"))
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
?scale_color_manual
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"))
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale)
}
x11()
print(FAMD_ind_plot)
FAMD=FAMD_res_example_mixed_data_clustering_1
classes=clusters_kmeans_FAMD
dims=c(1,2)
custom_theme=NULL
color_scale=distinct_scale
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"))
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale)
}
FAMD_ind_plot
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"))
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale) +
guides(shape = guide_legend(override.aes = list(size = 5)))
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"))
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale) +
guides(shape = guide_legend(override.aes = list(size = 20)))
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"))
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale) +
guides(color = guide_legend(override.aes = list(size = 20)))
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"))
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale) +
guides(color = guide_legend(override.aes = list(size = 5)))
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"))
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale) +
guides(color = guide_legend(override.aes = list(size = 6)))
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names")) +
geom_text(show.legend = FALSE) +
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale) +
guides(color = guide_legend(override.aes = list(size = 6)))
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"),show.legend = FALSE) +
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale) +
guides(color = guide_legend(override.aes = list(size = 6)))
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters"),show.legend = FALSE) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"),show.legend = FALSE) +
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale) +
guides(color = guide_legend(override.aes = list(size = 6)))
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters"),show.legend = FALSE) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"),show.legend = FALSE) +
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale)
}
# +
#   guides(color = guide_legend(override.aes = list(size = 6)))
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters"),show.legend = FALSE) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"),show.legend = FALSE)
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale)
}
# +
#   guides(color = guide_legend(override.aes = list(size = 6)))
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"),show.legend = FALSE)
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale)
}
# +
#
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"),show.legend = FALSE) +
guides(color = guide_legend(override.aes = list(size = 3)))
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale)
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"),show.legend = FALSE) +
guides(color = guide_legend(override.aes = list(size = 3)))
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale)
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
x11()
print(FAMD_ind_plot)
make_FAMD_ind_plot_classes<- function(FAMD,classes,dims=c(1,2),custom_theme=NULL,color_scale=NULL) {
FAMD_ind_plot_data=data.frame(FAMD$ind$coord[,dims],names=rownames(FAMD$ind$coord),clusters=as.factor(classes))
FAMD_ind_plot=ggplot(data=FAMD_ind_plot_data) +
geom_point(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters")) +
geom_text(aes_string(x=paste0("Dim.",dims[1]),y=paste0("Dim.",dims[2]),color="clusters",label="names"),show.legend = FALSE) +
guides(color = guide_legend(override.aes = list(size = 3)))
if (!is.null(color_scale)) {
FAMD_ind_plot= FAMD_ind_plot + scale_color_manual(values=color_scale)
}
FAMD_ind_plot=FAMD_ind_plot + geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
xlab(paste0("Dim. ",dims[1], " axis : ", round(FAMD$eig[dims[1],2],2)," % variance explained",sep="")) +
ylab (paste0("Dim. ",dims[2], " axis : ",round(FAMD$eig[dims[2],2],2)," % variance explained",sep="")) +
ggtitle("FAMD Individuals plot") + custom_theme + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
return(FAMD_ind_plot)
}
kmeans_FAMD_classes_plot=make_FAMD_ind_plot_classes(FAMD,classes,dims=c(1,2),custom_theme=theme_jh,color_scale=distinct_scale)
x11()
print(kmeans_FAMD_classes_plot)
true_clusters=c(rep(1,1000),rep(2,1000),rep(3,1000))
table(true_clusters,clusters_kmeans_FAMD)
using("FactoMineR","keras")
using<-function(...) {
libs<-unlist(list(...))
req<-unlist(lapply(libs,require,character.only=TRUE))
need<-libs[req==FALSE]
if(length(need)>0){
install.packages(need)
lapply(need,require,character.only=TRUE)
}
}
using("keras")
file_path<-dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(file_path)
example_mixed_data_clustering_1=readRDS("../../open_data/example_mixed_data_clustering_1.rds")
for (k in 1:3) {
example_mixed_data_clustering_1[,k]=as.numeric(as.character(example_mixed_data_clustering_1[,k]))
}
for (k in 4:ncol(example_mixed_data_clustering_1)) {
example_mixed_data_clustering_1[,k]=as.factor(example_mixed_data_clustering_1[,k])
}
print(class(example_mixed_data_clustering_1[,1]))
print(class(example_mixed_data_clustering_1[,4]))
true_clusters=c(rep(1,1000),rep(2,1000),rep(3,1000))
true_clusters=as.factor(c(rep(1,1000),rep(2,1000),rep(3,1000)))
library(caret)
dummyVars()
?dummyVars
dummyVars(data=example_mixed_data_clustering, ~ Cat1)
dummyVars(data=example_mixed_data_clustering_1, ~ Cat1)
test=dummyVars(data=example_mixed_data_clustering_1, ~ Cat1)
as.matrix(test)
dummyVars(data=example_mixed_data_clustering_1, ~ Cat1)
test$lvls
test$fullRank
test$terms
test$form
test$vars
test$facVars
library(dummies)
install.packages(dummies)
install.packages("dummies")
make_dummy_variables=function(full_data,col_num_to_dummy) {
data_dummied = full_data
for (k in col_num_to_dummy) {
dummy_variables <- dummyVars(" ~ .",setNames(data.frame(full_data[,k]),colnames(full_data)[k]))
data_dummied <- cbind(data_dummied,data.frame(predict(dummy_variables,
newdata = setNames(data.frame(full_data[,k]),colnames(full_data)[k])))[-1])
}
data_dummied[,col_num_to_dummy] <- list(NULL)
return(data_dummied)
}
bleh=make_dummy_variables(example_mixed_data_clustering_1,7)
head(bleh)
using<-function(...) {
libs<-unlist(list(...))
req<-unlist(lapply(libs,require,character.only=TRUE))
need<-libs[req==FALSE]
if(length(need)>0){
install.packages(need)
lapply(need,require,character.only=TRUE)
}
}
using("caret")
using<-function(...) {
libs<-unlist(list(...))
req<-unlist(lapply(libs,require,character.only=TRUE))
need<-libs[req==FALSE]
if(length(need)>0){
install.packages(need)
lapply(need,require,character.only=TRUE)
}
}
using("caret")
########################################################################################################
#Make dummy variables (without falling into the dummy trap >:( )
#Note that it uses caret
####
#INPUTS#
#full_data : full data frame with the columns to be dummied
#col_num_to_dummy : columns numbers of the variable to dummy
####
#OUTPUT#
#data_dummied : data with the proper variables dummied
########################################################################################################
make_dummy_variables=function(full_data,col_num_to_dummy) {
data_dummied = full_data
for (k in col_num_to_dummy) {
dummy_variables <- dummyVars(" ~ .",setNames(data.frame(full_data[,k]),colnames(full_data)[k]))
data_dummied <- cbind(data_dummied,data.frame(predict(dummy_variables,
newdata = setNames(data.frame(full_data[,k]),colnames(full_data)[k])))[-1])
}
data_dummied[,col_num_to_dummy] <- list(NULL)
return(data_dummied)
}
predict(test)
predict(test,newdata=example_mixed_data_clustering_1)
test=predict(dummyVars(data=example_mixed_data_clustering_1, ~ Cat1),newdata=example_mixed_data_clustering_1[,1,drop=FALSE])
test=predict(dummyVars(data=example_mixed_data_clustering_1, ~ Cat1),newdata=example_mixed_data_clustering_1[,7,drop=FALSE])
test
class(test)
Cat1_dummied=predict(dummyVars(data=example_mixed_data_clustering_1, ~ Cat1),newdata=example_mixed_data_clustering_1[,7,drop=FALSE])
Cat1_dummied
example_mixed_data_clustering_1_final=as.data.frame(cbind(example_mixed_data_clustering_1[,1:6],Cat1_dummied))
example_mixed_data_clustering_1_final
example_mixed_data_clustering_1=readRDS("../../open_data/example_mixed_data_clustering_1.rds")
for (k in 1:6) {
example_mixed_data_clustering_1[,k]=as.numeric(as.character(example_mixed_data_clustering_1[,k]))
}
Cat1_dummied=predict(dummyVars(data=example_mixed_data_clustering_1, ~ Cat1),newdata=example_mixed_data_clustering_1[,7,drop=FALSE])
example_mixed_data_clustering_1_final=as.data.frame(cbind(example_mixed_data_clustering_1[,1:6],Cat1_dummied))
class(example_mixed_data_clustering_1_final[,8])
example_mixed_data_clustering_1=readRDS("../../open_data/example_mixed_data_clustering_1.rds")
for (k in 1:6) {
example_mixed_data_clustering_1[,k]=as.numeric(as.character(example_mixed_data_clustering_1[,k]))
}
Cat1_dummied=predict(dummyVars(data=example_mixed_data_clustering_1, ~ Cat1),newdata=example_mixed_data_clustering_1[,7,drop=FALSE])
example_mixed_data_clustering_1_final=as.data.frame(cbind(example_mixed_data_clustering_1[,1:6],Cat1_dummied))
true_clusters=as.factor(c(rep(1,1000),rep(2,1000),rep(3,1000)))
example_mixed_data_clustering_1_final=scale(example_mixed_data_clustering_1_final)
Input = layer_input(shape=ncol(breast_cancer_clustering))
Input = layer_input(shape=ncol(breast_cancer_clustering))
Input = layer_input(shape=ncol(example_mixed_data_clustering_1_final))
