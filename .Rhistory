density_list_raw=by(data[,k],INDICES=classes,density,simplify = TRUE)
classes_vector=NULL
classes_list=lapply(density_list_raw,function(x) {length(x[[1]])})
head(data[,k])
head(classes)
density_list_raw=by(data[,k],INDICES=as.numeric(as.character(classes)),density,simplify = TRUE)
class(data[,k])
data[,k]
density_list_raw=by(as.numeric(data[,k]),INDICES=as.numeric(as.character(classes)),density,simplify = TRUE)
cont_distribution_by_cluster=function(data,classes,layout=NULL,color_scale=NULL,custom_theme=NULL,title=NULL) {
if (is.null(layout)) {
layout=c(ceiling(sqrt(ncol(data))),ceiling(sqrt(ncol(data))))
}
plot_list=list()
for (k in 1:ncol(data)) {
density_list_raw=by(as.numeric(data[,k]),INDICES=as.numeric(as.character(classes)),density,simplify = TRUE)
classes_vector=NULL
classes_list=lapply(density_list_raw,function(x) {length(x[[1]])})
for (i in 1:length(density_list_raw)) {
classes_vector=c(classes_vector,rep(names(classes_list[i]), classes_list[i]))
}
tmp_plot_data=data.frame(x=unlist(lapply(density_list_raw,function(x) {x[[1]]})),
y=unlist(lapply(density_list_raw,function(x) {x[[2]]})),
classes=as.factor(classes_vector))
tmp_plot=ggplot(data=tmp_plot_data) +
geom_line(aes(x=x,y=y,color=classes),alpha=1) +
xlab("") + ylab("") + custom_theme + ggtitle(colnames(data)[k]) + custom_theme
if(!is.null(color_scale)) {
tmp_plot = tmp_plot + scale_color_manual(values=distinct_scale)
}
plot_list[[k]]=tmp_plot
}
final_plot=grid.arrange(gTree(children = gList(rectGrob(gp=gpar(fill="white",col="white", lwd=0)),
arrangeGrob(grobs=plot_list, ncol=layout[1], nrow=layout[2])
)))
return(final_plot)
}
cont_variables_split=splitIndices(nx=length(cont_variables), ncl=ceiling(length(cont_variables) / 9))
for (k in 1:length(cont_variables_split)) {
kmeans_FAMD_cont_distribution_by_cluster=cont_distribution_by_cluster(data=multi_morbid[,cont_variables[cont_variables_split[[k]]]],
classes=as.factor(clusters_kmeans_FAMD_multi_morbid),layout=c(3,3),
color_scale=NULL,custom_theme=theme_jh,
title=paste0("Distributions of continuous variables by classes (",
k,"/",length(cont_variables_split),")"))
svg(filename=paste0("../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_cont_distribution_by_cluster_",k,"_",length(cont_variables_split),".svg"),
width=10,height=10)
grid.draw(kmeans_FAMD_cont_distribution_by_cluster)
dev.off()
}
# file_path<-dirname(rstudioapi::getActiveDocumentContext()$path)
# setwd(file_path)
setwd("C:/Users/JOE/Documents/Imperial College 2018-2019/Translational Data Science/Barracudas")
mydata=read.csv("../data/processed/UKBcompleteFeb19_subset.csv")
source("C:/Users/JOE/Documents/R_utility_and_self_implementations/FAMD_plots_utility.R")
source("C:/Users/JOE/Documents/R_utility_and_self_implementations/colors_themes_utility.R")
################################################################################
# PRE-PROCESSING
################################################################################
#define obese BMI > 35
mydata$obese = ifelse(mydata$BMI >= 35, 1, 0)
#define outcome cols
outcomes = c('diabetes','mi','stroke','angina','obese')
outcome_cols = grep(paste0('^',outcomes,'$',collapse = '|'), colnames(mydata))
#col of chronic diseases
mydata$no_chronic = apply(mydata[,outcome_cols],1,sum)
#change gender levels and remove gender that is not used anymore
mydata$Sex = factor(ifelse(mydata$gender == 0, 'Female','Male'))
mydata$gender=NULL
#binary cols
binary_cols = which(unlist(sapply(mydata, function(x) length(levels(factor(x)))==2)))
mydata[,binary_cols]=lapply(mydata[,binary_cols],as.factor)
#re-organize columns
mydata=mydata %>% select(X,eid,mi,angina,stroke,htn,obese,no_chronic, everything())
#subset multi morbid rows
multi_morbid = mydata[which(mydata$no_chronic>1),]
mydata[,'no_chronic']=as.factor(mydata[,'no_chronic'])
multi_morbid[,'no_chronic']=as.factor(multi_morbid[,'no_chronic'])
for (k in 1:ncol(mydata)) {
if (class(mydata[,k])!="factor" & k!=1 & k!=2 & k!=8) {
mydata[,k]=scale(mydata[,k])
}
}
for (k in 1:ncol(multi_morbid)) {
if (class(multi_morbid[,k])!="factor" & k!=1 & k!=2 & k!=8) {
multi_morbid[,k]=scale(multi_morbid[,k])
}
}
################################################################################
################################################################################
# multi-morbid individuals only
################################################################################
################################################################################
################################################################################
# FAMD  multi-morbid individuals
################################################################################
FAMD_multi_morbid_res=readRDS("../data/processed/FAMD_multi_morbid_res.rds")
nb_comp_FAMD_multi_morbid=which(FAMD_multi_morbid_res$eig[,3] > 90)[1]
################################################################################
# Choosing the number of clusters for kmeans
################################################################################
n_centers=2:10
tot_withinss=rep(0,length(n_centers))
CH_criterion=rep(0,length(n_centers))
# Different numbers of centers
for (k in 1:length(n_centers)) {
kmeans_FAMD_multi_morbid=kmeans(FAMD_multi_morbid_res$ind$coord[,1:nb_comp_FAMD_multi_morbid],centers=n_centers[k])
tot_withinss[k]=kmeans_FAMD_multi_morbid$tot.withinss
CH_criterion[k]=intCriteria(traj=as.matrix(FAMD_multi_morbid_res$ind$coord[,1:nb_comp_FAMD_multi_morbid]),
part=kmeans_FAMD_multi_morbid$cluster,"Calinski_Harabasz")$`calinski_harabasz`
}
elbow_plot_kmeans = ggplot(data=data.frame(n_centers,tot_withinss,CH_criterion)) + geom_line(aes(x=n_centers,y=tot_withinss)) +
geom_line(aes(x=n_centers,y=CH_criterion)) + theme_jh
x11()
print(elbow_plot_kmeans)
################################################################################
# Kmeans on the FAMD row coordinates with the best number of clusters
################################################################################
kmeans_FAMD_multi_morbid=kmeans(FAMD_multi_morbid_res$ind$coord[,1:nb_comp_FAMD_multi_morbid],centers=2)
clusters_kmeans_FAMD_multi_morbid=kmeans_FAMD_multi_morbid$cluster
kmeans_FAMD_multi_morbid_plot_d12=make_FAMD_ind_plot_classes(FAMD_multi_morbid_res,classes=clusters_kmeans_FAMD_multi_morbid,
dims=c(1,2),
custom_theme=theme_jh,color_scale=distinct_scale)
kmeans_FAMD_multi_morbid_plot_d34=make_FAMD_ind_plot_classes(FAMD_multi_morbid_res,classes=clusters_kmeans_FAMD_multi_morbid,
dims=c(3,4),
custom_theme=theme_jh,color_scale=distinct_scale)
svg(filename="../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_multi_morbid_plot_d12.svg",width=10,height=10)
print(kmeans_FAMD_multi_morbid_plot_d12)
dev.off()
svg(filename="../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_multi_morbid_plot_d34.svg",width=10,height=10)
print(kmeans_FAMD_multi_morbid_plot_d34)
dev.off()
################################################
# Means continuous variables by cluster
################################################
cat_variables=colnames(multi_morbid)[sapply(multi_morbid,class) == "factor"]
cont_variables=colnames(multi_morbid)[sapply(multi_morbid,class) != "factor"]
cont_variables=cont_variables[3:length(cont_variables)]
kmeans_FAMD_mean_by_cluster_continuous_plot=mean_by_cluster_continuous(data=multi_morbid[,cont_variables],
classes=as.factor(clusters_kmeans_FAMD_multi_morbid),
color_scale=NULL,custom_theme=theme_jh,title=NULL)
x11()
print(kmeans_FAMD_mean_by_cluster_continuous_plot)
svg(filename="../results_joel_PC/kmeans_FAMD_mean_by_cluster_continuous_plot.svg",width=10,height=10)
print(kmeans_FAMD_mean_by_cluster_continuous_plot)
dev.off()
################################################
# Distributions Cat variables by cluster
################################################
cat_variables_split=splitIndices(nx=length(cat_variables), ncl=ceiling(length(cat_variables) / 9))
for (k in 1:length(cat_variables_split)) {
kmeans_FAMD_cat_distribution_by_cluster=cat_distribution_by_cluster(data=multi_morbid[,cat_variables[cat_variables_split[[k]]]],
classes=as.factor(clusters_kmeans_FAMD_multi_morbid),layout=c(3,3),
color_scale=NULL,custom_theme=theme_jh,
title=paste0("Distributions of categorical variables by classes (",
k,"/",length(cat_variables_split),")"))
svg(filename=paste0("../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_cat_distribution_by_cluster_",k,"_",length(cat_variables_split),".svg"),
width=10,height=10)
grid.draw(kmeans_FAMD_cat_distribution_by_cluster)
dev.off()
}
################################################
# Distributions Cont variables by cluster
################################################
cont_variables_split=splitIndices(nx=length(cont_variables), ncl=ceiling(length(cont_variables) / 9))
for (k in 1:length(cont_variables_split)) {
kmeans_FAMD_cont_distribution_by_cluster=cont_distribution_by_cluster(data=multi_morbid[,cont_variables[cont_variables_split[[k]]]],
classes=as.factor(clusters_kmeans_FAMD_multi_morbid),layout=c(3,3),
color_scale=NULL,custom_theme=theme_jh,
title=paste0("Distributions of continuous variables by classes (",
k,"/",length(cont_variables_split),")"))
svg(filename=paste0("../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_cont_distribution_by_cluster_",k,"_",length(cont_variables_split),".svg"),
width=10,height=10)
grid.draw(kmeans_FAMD_cont_distribution_by_cluster)
dev.off()
}
svg(filename="../results_joel_PC/kmeans_FAMD_cont_distribution_by_cluster.svg",width=10,height=10)
grid.draw(kmeans_FAMD_cont_distribution_by_cluster)
dev.off()
parangon_indviduals_list=rep(0,length(levels(clusters_kmeans_FAMD_multi_morbid)))
parangon_indviduals_list
parangon_indviduals_list=rep(0,length(unique(clusters_kmeans_FAMD_multi_morbid)))
parangon_indviduals_list
n_centers=2:10
tot_withinss=rep(0,length(n_centers))
CH_criterion=rep(0,length(n_centers))
kmeans_FAMD_full_data=kmeans(FAMD_full_data_res$ind$coord[,1:nb_comp_FAMD_full_data],centers=n_centers[k])
tot_withinss[k]=kmeans_FAMD_full_data$tot.withinss
FAMD_full_data_res=readRDS("../data/processed/FAMD_full_data_res.rds")
nb_comp_FAMD_full_data=which(FAMD_full_data_res$eig[,3] > 90)[1]
k=1
kmeans_FAMD_full_data=kmeans(FAMD_full_data_res$ind$coord[,1:nb_comp_FAMD_full_data],centers=n_centers[k])
tot_withinss[k]=kmeans_FAMD_full_data$tot.withinss
CH_criterion[k]=intCriteria(traj=as.matrix(FAMD_full_data_res$ind$coord[,1:nb_comp_FAMD_full_data]),
part=kmeans_FAMD_full_data$cluster,"Calinski_Harabasz")$`calinski_harabasz`
for (k in 1:length(n_centers)) {
kmeans_FAMD_full_data=kmeans(FAMD_full_data_res$ind$coord[,1:nb_comp_FAMD_full_data],centers=n_centers[k])
tot_withinss[k]=kmeans_FAMD_full_data$tot.withinss
CH_criterion[k]=intCriteria(traj=as.matrix(FAMD_full_data_res$ind$coord[,1:nb_comp_FAMD_full_data]),
part=kmeans_FAMD_full_data$cluster,"Calinski_Harabasz")$`calinski_harabasz`
}
elbow_plot_kmeans = ggplot(data=data.frame(n_centers,tot_withinss,CH_criterion)) + geom_line(aes(x=n_centers,y=tot_withinss)) +
geom_line(aes(x=n_centers,y=CH_criterion)) + theme_jh
x11()
print(elbow_plot_kmeans)
CH_criterion
tot_withinss
print(tot_withinss)
print(CH_criterion)
kmeans_FAMD_full_data=kmeans(FAMD_full_data_res$ind$coord[,1:nb_comp_FAMD_full_data],centers=2)
clusters_kmeans_FAMD_full_data=kmeans_FAMD_full_data$cluster
kmeans_FAMD_full_data_plot_d12=make_FAMD_ind_plot_classes(FAMD_full_data_res,classes=clusters_kmeans_FAMD_full_data,
dims=c(1,2),
custom_theme=theme_jh,color_scale=distinct_scale)
kmeans_FAMD_full_data_plot_d34=make_FAMD_ind_plot_classes(FAMD_full_data_res,classes=clusters_kmeans_FAMD_full_data,
dims=c(3,4),
custom_theme=theme_jh,color_scale=distinct_scale)
svg(filename="../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_full_data_plot_d12.svg",width=10,height=10)
print(kmeans_FAMD_full_data_plot_d12)
dev.off()
svg(filename="../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_full_data_plot_d34.svg",width=10,height=10)
print(kmeans_FAMD_full_data_plot_d34)
dev.off()
cat_variables=colnames(mydata)[sapply(mydata,class) == "factor"]
cont_variables=colnames(mydata)[sapply(mydata,class) != "factor"]
cont_variables=cont_variables[3:length(cont_variables)]
cat_variables=colnames(mydata)[sapply(mydata,class) == "factor"]
cont_variables=colnames(mydata)[sapply(mydata,class) != "factor"]
cont_variables=cont_variables[3:length(cont_variables)]
kmeans_FAMD_mean_by_cluster_continuous_plot=mean_by_cluster_continuous(data=mydata[,cont_variables],
classes=as.factor(clusters_kmeans_FAMD_full_data),
color_scale=NULL,custom_theme=theme_jh,title=NULL)
x11()
print(kmeans_FAMD_mean_by_cluster_continuous_plot)
svg(filename="../results_joel_PC/kmeans_FAMD_mean_by_cluster_continuous_plot.svg",width=10,height=10)
print(kmeans_FAMD_mean_by_cluster_continuous_plot)
dev.off()
cat_variables=colnames(mydata)[sapply(mydata,class) == "factor"]
cont_variables=colnames(mydata)[sapply(mydata,class) != "factor"]
cont_variables=cont_variables[3:length(cont_variables)]
kmeans_FAMD_full_data=kmeans(FAMD_full_data_res$ind$coord[,1:nb_comp_FAMD_full_data],centers=2)
clusters_kmeans_FAMD_full_data=kmeans_FAMD_full_data$cluster
kmeans_FAMD_full_data_plot_d12=make_FAMD_ind_plot_classes(FAMD_full_data_res,classes=clusters_kmeans_FAMD_full_data,
dims=c(1,2),
custom_theme=theme_jh,color_scale=distinct_scale)
kmeans_FAMD_full_data_plot_d34=make_FAMD_ind_plot_classes(FAMD_full_data_res,classes=clusters_kmeans_FAMD_full_data,
dims=c(3,4),
custom_theme=theme_jh,color_scale=distinct_scale)
svg(filename="../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_full_data_plot_d12.svg",width=10,height=10)
print(kmeans_FAMD_full_data_plot_d12)
dev.off()
svg(filename="../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_full_data_plot_d34.svg",width=10,height=10)
print(kmeans_FAMD_full_data_plot_d34)
dev.off()
################################################
# Means continuous variables by cluster
################################################
cat_variables=colnames(mydata)[sapply(mydata,class) == "factor"]
cont_variables=colnames(mydata)[sapply(mydata,class) != "factor"]
cont_variables=cont_variables[3:length(cont_variables)]
kmeans_FAMD_mean_by_cluster_continuous_plot=mean_by_cluster_continuous(data=mydata[,cont_variables],
classes=as.factor(clusters_kmeans_FAMD_full_data),
color_scale=NULL,custom_theme=theme_jh,title=NULL)
x11()
print(kmeans_FAMD_mean_by_cluster_continuous_plot)
svg(filename="../results_joel_PC/kmeans_FAMD_full_data_mean_by_cluster_continuous_plot.svg",width=10,height=10)
print(kmeans_FAMD_mean_by_cluster_continuous_plot)
cat_variables=colnames(mydata)[sapply(mydata,class) == "factor"]
cont_variables=colnames(mydata)[sapply(mydata,class) != "factor"]
cont_variables=cont_variables[3:length(cont_variables)]
kmeans_FAMD_mean_by_cluster_continuous_plot=mean_by_cluster_continuous(data=mydata[,cont_variables],
classes=as.factor(clusters_kmeans_FAMD_full_data),
color_scale=NULL,custom_theme=theme_jh,title=NULL)
svg(filename="../results/results_joel_HPC/FAMD_kmeans//kmeans_FAMD_full_data_mean_by_cluster_continuous_plot.svg",width=10,height=10)
print(kmeans_FAMD_mean_by_cluster_continuous_plot)
dev.off()
cat_variables_split=splitIndices(nx=length(cat_variables), ncl=ceiling(length(cat_variables) / 9))
for (k in 1:length(cat_variables_split)) {
kmeans_FAMD_cat_distribution_by_cluster=cat_distribution_by_cluster(data=multi_morbid[,cat_variables[cat_variables_split[[k]]]],
classes=as.factor(clusters_kmeans_FAMD_multi_morbid),layout=c(3,3),
color_scale=NULL,custom_theme=theme_jh,
title=paste0("Distributions of categorical variables by classes (",
k,"/",length(cat_variables_split),")"))
svg(filename=paste0("../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_full_data_cat_distribution_by_cluster_",k,"_",length(cat_variables_split),".svg"),
width=10,height=10)
grid.draw(kmeans_FAMD_cat_distribution_by_cluster)
dev.off()
}
cat_variables_split=splitIndices(nx=length(cat_variables), ncl=ceiling(length(cat_variables) / 9))
for (k in 1:length(cat_variables_split)) {
kmeans_FAMD_cat_distribution_by_cluster=cat_distribution_by_cluster(data=mydata[,cat_variables[cat_variables_split[[k]]]],
classes=as.factor(clusters_kmeans_FAMD_full_data),layout=c(3,3),
color_scale=NULL,custom_theme=theme_jh,
title=paste0("Distributions of categorical variables by classes (",
k,"/",length(cat_variables_split),")"))
svg(filename=paste0("../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_full_data_cat_distribution_by_cluster_",k,"_",length(cat_variables_split),".svg"),
width=10,height=10)
grid.draw(kmeans_FAMD_cat_distribution_by_cluster)
dev.off()
}
cont_variables_split=splitIndices(nx=length(cont_variables), ncl=ceiling(length(cont_variables) / 9))
for (k in 1:length(cont_variables_split)) {
kmeans_FAMD_cont_distribution_by_cluster=cont_distribution_by_cluster(data=mydata[,cont_variables[cont_variables_split[[k]]]],
classes=as.factor(clusters_kmeans_FAMD_full_data),layout=c(3,3),
color_scale=NULL,custom_theme=theme_jh,
title=paste0("Distributions of continuous variables by classes (",
k,"/",length(cont_variables_split),")"))
svg(filename=paste0("../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_cont_distribution_by_cluster_",k,"_",length(cont_variables_split),".svg"),
width=10,height=10)
grid.draw(kmeans_FAMD_cont_distribution_by_cluster)
dev.off()
}
using<-function(...) {
libs<-unlist(list(...))
req<-unlist(lapply(libs,require,character.only=TRUE))
need<-libs[req==FALSE]
if(length(need)>0){
install.packages(need)
lapply(need,require,character.only=TRUE)
}
}
using("FactoMineR","parallel")
################################################################################
# WORKING DIRECTORY AND SOURCING FUNCTIONS
################################################################################
# file_path<-dirname(rstudioapi::getActiveDocumentContext()$path)
# setwd(file_path)
setwd("C:/Users/JOE/Documents/Imperial College 2018-2019/Translational Data Science/Barracudas")
mydata=read.csv("../data/processed/UKBcompleteFeb19_subset.csv")
source("C:/Users/JOE/Documents/R_utility_and_self_implementations/FAMD_plots_utility.R")
source("C:/Users/JOE/Documents/R_utility_and_self_implementations/colors_themes_utility.R")
################################################################################
# PRE-PROCESSING
################################################################################
#define obese BMI > 35
mydata$obese = ifelse(mydata$BMI >= 35, 1, 0)
#define outcome cols
outcomes = c('diabetes','mi','stroke','angina','obese')
outcome_cols = grep(paste0('^',outcomes,'$',collapse = '|'), colnames(mydata))
#col of chronic diseases
mydata$no_chronic = apply(mydata[,outcome_cols],1,sum)
#change gender levels and remove gender that is not used anymore
mydata$Sex = factor(ifelse(mydata$gender == 0, 'Female','Male'))
mydata$gender=NULL
#binary cols
binary_cols = which(unlist(sapply(mydata, function(x) length(levels(factor(x)))==2)))
mydata[,binary_cols]=lapply(mydata[,binary_cols],as.factor)
#re-organize columns
mydata=mydata %>% select(X,eid,mi,angina,stroke,htn,obese,no_chronic, everything())
#subset multi morbid rows
multi_morbid = mydata[which(mydata$no_chronic>1),]
mydata[,'no_chronic']=as.factor(mydata[,'no_chronic'])
multi_morbid[,'no_chronic']=as.factor(multi_morbid[,'no_chronic'])
for (k in 1:ncol(mydata)) {
if (class(mydata[,k])!="factor" & k!=1 & k!=2 & k!=8) {
mydata[,k]=scale(mydata[,k])
}
}
for (k in 1:ncol(multi_morbid)) {
if (class(multi_morbid[,k])!="factor" & k!=1 & k!=2 & k!=8) {
multi_morbid[,k]=scale(multi_morbid[,k])
}
}
FAMD_multi_morbid_res=readRDS("../data/processed/FAMD_multi_morbid_res.rds")
nb_comp_FAMD_multi_morbid=which(FAMD_multi_morbid_res$eig[,3] > 90)[1]
n_centers=2:10
tot_withinss=rep(0,length(n_centers))
CH_criterion=rep(0,length(n_centers))
# Different numbers of centers
for (k in 1:length(n_centers)) {
kmeans_FAMD_multi_morbid=kmeans(FAMD_multi_morbid_res$ind$coord[,1:nb_comp_FAMD_multi_morbid],centers=n_centers[k])
tot_withinss[k]=kmeans_FAMD_multi_morbid$tot.withinss
CH_criterion[k]=intCriteria(traj=as.matrix(FAMD_multi_morbid_res$ind$coord[,1:nb_comp_FAMD_multi_morbid]),
part=kmeans_FAMD_multi_morbid$cluster,"Calinski_Harabasz")$`calinski_harabasz`
}
elbow_plot_kmeans = ggplot(data=data.frame(n_centers,tot_withinss,CH_criterion)) + geom_line(aes(x=n_centers,y=tot_withinss)) +
geom_line(aes(x=n_centers,y=CH_criterion)) + theme_jh
x11()
print(elbow_plot_kmeans)
graphics.off()
kmeans_FAMD_multi_morbid=kmeans(FAMD_multi_morbid_res$ind$coord[,1:nb_comp_FAMD_multi_morbid],centers=2)
clusters_kmeans_FAMD_multi_morbid=kmeans_FAMD_multi_morbid$cluster
kmeans_FAMD_multi_morbid_plot_d12=make_FAMD_ind_plot_classes(FAMD_multi_morbid_res,classes=clusters_kmeans_FAMD_multi_morbid,
dims=c(1,2),
custom_theme=theme_jh,color_scale=distinct_scale)
kmeans_FAMD_multi_morbid_plot_d34=make_FAMD_ind_plot_classes(FAMD_multi_morbid_res,classes=clusters_kmeans_FAMD_multi_morbid,
dims=c(3,4),
custom_theme=theme_jh,color_scale=distinct_scale)
svg(filename="../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_multi_morbid_plot_d12.svg",width=10,height=10)
print(kmeans_FAMD_multi_morbid_plot_d12)
dev.off()
svg(filename="../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_multi_morbid_plot_d34.svg",width=10,height=10)
print(kmeans_FAMD_multi_morbid_plot_d34)
dev.off()
cat_variables=colnames(multi_morbid)[sapply(multi_morbid,class) == "factor"]
cont_variables=colnames(multi_morbid)[sapply(multi_morbid,class) != "factor"]
cont_variables=cont_variables[3:length(cont_variables)]
kmeans_FAMD_mean_by_cluster_continuous_plot=mean_by_cluster_continuous(data=multi_morbid[,cont_variables],
classes=as.factor(clusters_kmeans_FAMD_multi_morbid),
color_scale=NULL,custom_theme=theme_jh,title=NULL)
x11()
print(kmeans_FAMD_mean_by_cluster_continuous_plot)
svg(filename="../results_joel_PC/kmeans_FAMD_multi_morbid_mean_by_cluster_continuous_plot.svg",width=10,height=10)
print(kmeans_FAMD_mean_by_cluster_continuous_plot)
dev.off()
cat_variables=colnames(multi_morbid)[sapply(multi_morbid,class) == "factor"]
cont_variables=colnames(multi_morbid)[sapply(multi_morbid,class) != "factor"]
cont_variables=cont_variables[3:length(cont_variables)]
kmeans_FAMD_mean_by_cluster_continuous_plot=mean_by_cluster_continuous(data=multi_morbid[,cont_variables],
classes=as.factor(clusters_kmeans_FAMD_multi_morbid),
color_scale=NULL,custom_theme=theme_jh,title=NULL)
svg(filename="../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_multi_morbid_mean_by_cluster_continuous_plot.svg",width=10,height=10)
print(kmeans_FAMD_mean_by_cluster_continuous_plot)
dev.off()
cat_variables_split=splitIndices(nx=length(cat_variables), ncl=ceiling(length(cat_variables) / 9))
for (k in 1:length(cat_variables_split)) {
kmeans_FAMD_cat_distribution_by_cluster=cat_distribution_by_cluster(data=multi_morbid[,cat_variables[cat_variables_split[[k]]]],
classes=as.factor(clusters_kmeans_FAMD_multi_morbid),layout=c(3,3),
color_scale=NULL,custom_theme=theme_jh,
title=paste0("Distributions of categorical variables by classes (",
k,"/",length(cat_variables_split),")"))
svg(filename=paste0("../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_multi_morbid_cat_distribution_by_cluster_",k,"_",length(cat_variables_split),".svg"),
width=10,height=10)
grid.draw(kmeans_FAMD_cat_distribution_by_cluster)
dev.off()
}
cont_variables_split=splitIndices(nx=length(cont_variables), ncl=ceiling(length(cont_variables) / 9))
cont_variables_split=splitIndices(nx=length(cont_variables), ncl=ceiling(length(cont_variables) / 9))
for (k in 1:length(cont_variables_split)) {
kmeans_FAMD_cont_distribution_by_cluster=cont_distribution_by_cluster(data=multi_morbid[,cont_variables[cont_variables_split[[k]]]],
classes=as.factor(clusters_kmeans_FAMD_multi_morbid),layout=c(3,3),
color_scale=NULL,custom_theme=theme_jh,
title=paste0("Distributions of continuous variables by classes (",
k,"/",length(cont_variables_split),")"))
svg(filename=paste0("../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_multi_morbid_cont_distribution_by_cluster_",k,"_",length(cont_variables_split),".svg"),
width=10,height=10)
grid.draw(kmeans_FAMD_cont_distribution_by_cluster)
dev.off()
}
FAMD_full_data_res=readRDS("../data/processed/FAMD_full_data_res.rds")
nb_comp_FAMD_full_data=which(FAMD_full_data_res$eig[,3] > 90)[1]
################################################################################
# Choosing the number of clusters for kmeans
################################################################################
n_centers=2:10
tot_withinss=rep(0,length(n_centers))
CH_criterion=rep(0,length(n_centers))
# Different numbers of centers
for (k in 1:length(n_centers)) {
kmeans_FAMD_full_data=kmeans(FAMD_full_data_res$ind$coord[,1:nb_comp_FAMD_full_data],centers=n_centers[k])
tot_withinss[k]=kmeans_FAMD_full_data$tot.withinss
CH_criterion[k]=intCriteria(traj=as.matrix(FAMD_full_data_res$ind$coord[,1:nb_comp_FAMD_full_data]),
part=kmeans_FAMD_full_data$cluster,"Calinski_Harabasz")$`calinski_harabasz`
}
print(tot_withinss)
print(CH_criterion)
kmeans_FAMD_full_data=kmeans(FAMD_full_data_res$ind$coord[,1:nb_comp_FAMD_full_data],centers=2)
clusters_kmeans_FAMD_full_data=kmeans_FAMD_full_data$cluster
kmeans_FAMD_full_data_plot_d12=make_FAMD_ind_plot_classes(FAMD_full_data_res,classes=clusters_kmeans_FAMD_full_data,
dims=c(1,2),
custom_theme=theme_jh,color_scale=distinct_scale)
kmeans_FAMD_full_data_plot_d34=make_FAMD_ind_plot_classes(FAMD_full_data_res,classes=clusters_kmeans_FAMD_full_data,
dims=c(3,4),
custom_theme=theme_jh,color_scale=distinct_scale)
svg(filename="../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_full_data_plot_d12.svg",width=10,height=10)
print(kmeans_FAMD_full_data_plot_d12)
dev.off()
svg(filename="../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_full_data_plot_d34.svg",width=10,height=10)
print(kmeans_FAMD_full_data_plot_d34)
dev.off()
cat_variables=colnames(mydata)[sapply(mydata,class) == "factor"]
cont_variables=colnames(mydata)[sapply(mydata,class) != "factor"]
cont_variables=cont_variables[3:length(cont_variables)]
kmeans_FAMD_mean_by_cluster_continuous_plot=mean_by_cluster_continuous(data=mydata[,cont_variables],
classes=as.factor(clusters_kmeans_FAMD_full_data),
color_scale=NULL,custom_theme=theme_jh,title=NULL)
svg(filename="../results/results_joel_HPC/FAMD_kmeans//kmeans_FAMD_full_data_mean_by_cluster_continuous_plot.svg",width=10,height=10)
print(kmeans_FAMD_mean_by_cluster_continuous_plot)
dev.off()
cat_variables_split=splitIndices(nx=length(cat_variables), ncl=ceiling(length(cat_variables) / 9))
for (k in 1:length(cat_variables_split)) {
kmeans_FAMD_cat_distribution_by_cluster=cat_distribution_by_cluster(data=mydata[,cat_variables[cat_variables_split[[k]]]],
classes=as.factor(clusters_kmeans_FAMD_full_data),layout=c(3,3),
color_scale=NULL,custom_theme=theme_jh,
title=paste0("Distributions of categorical variables by classes (",
k,"/",length(cat_variables_split),")"))
svg(filename=paste0("../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_full_data_cat_distribution_by_cluster_",k,"_",length(cat_variables_split),".svg"),
width=10,height=10)
grid.draw(kmeans_FAMD_cat_distribution_by_cluster)
dev.off()
}
cont_variables_split=splitIndices(nx=length(cont_variables), ncl=ceiling(length(cont_variables) / 9))
for (k in 1:length(cont_variables_split)) {
kmeans_FAMD_cont_distribution_by_cluster=cont_distribution_by_cluster(data=mydata[,cont_variables[cont_variables_split[[k]]]],
classes=as.factor(clusters_kmeans_FAMD_full_data),layout=c(3,3),
color_scale=NULL,custom_theme=theme_jh,
title=paste0("Distributions of continuous variables by classes (",
k,"/",length(cont_variables_split),")"))
svg(filename=paste0("../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_cont_distribution_by_cluster_",k,"_",length(cont_variables_split),".svg"),
width=10,height=10)
grid.draw(kmeans_FAMD_cont_distribution_by_cluster)
dev.off()
}
saveRDS(kmeans_FAMD_full_data,"../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_full_data.rds")
saveRDS(kmeans_FAMD_multi_morbid,"../results/results_joel_HPC/FAMD_kmeans/kmeans_FAMD_multi_morbid.rds")
kmeans_FAMD_multi_morbid
library(impute)
?impute.knn
setwd("C:/Users/JOE/Documents/Imperial College 2018-2019/Translational Data Science/Barracudas")
# source("C:/Users/JOE/Documents/R_utility_and_self_implementations/FAMD_plots_utility.R")
# source("C:/Users/JOE/Documents/R_utility_and_self_implementations/colors_themes_utility.R")
source("code/utility_functions/FAMD_plots_utility.R")
source("code/utility_functions/colors_themes_utility.R")
